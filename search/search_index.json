{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"KG-Hub Downloader","text":"<p>| Documentation | Repository | PyPI |</p>"},{"location":"#overview","title":"Overview","text":"<p>This is a configuration based file caching downloader with initial support for http requests &amp; queries against elasticsearch.</p>"},{"location":"#installation","title":"Installation","text":"<p>KGHub Downloader is available to install via pip:</p> <pre><code>pip install kghub-downloader\n</code></pre>"},{"location":"#configure","title":"Configure","text":"<p>The downloader requires a YAML file which contains a list of target URLs to download, and local names to save those downloads. For an example, see example/download.yaml</p> <p>Available options are:</p> <ul> <li>*url: The URL to download from. Currently supported:</li> <li><code>http(s)</code></li> <li><code>ftp</code><ul> <li>with <code>glob:</code> option to download files with specific extensions (only with ftp as of now and looks recursively).</li> </ul> </li> <li>Google Cloud Storage (<code>gs://</code>)</li> <li>Google Drive (<code>gdrive://</code> or https://drive.google.com/...). The file must be publicly accessible.</li> <li>Amazon AWS S3 bucket (<code>s3://</code>)</li> <li>local_name: The name to save the file as locally</li> <li>tag: A tag to use to filter downloads</li> <li>api: The API to use to download the file. Currently supported: <code>elasticsearch</code></li> <li>elastic search options</li> <li>query_file: The file containing the query to run against the index</li> <li>index: The elastic search index for query</li> </ul> <p>* Note:  Google Cloud Storage URLs require that you have set up your credentials as described here. You must:</p> <ul> <li>create a service account</li> <li>add the service account to the relevant bucket and</li> <li>download a JSON key for that service account.   Then, set the <code>GOOGLE_APPLICATION_CREDENTIALS</code> environment variable to point to that file.</li> </ul> <p>Mirorring local files to Amazon AWS S3 bucket requires the following:</p> <ul> <li>Create an AWS account</li> <li>Create an IAM user in AWS: This enables getting the <code>AWS_ACCESS_KEY_ID</code> and <code>AWS_SECRET_ACCESS_KEY</code> needed for authentication. These two should be stored as environment variables in the user's system.</li> <li>Create an S3 bucket: This will be the destination for pushing local files.</li> </ul> <p>You can also include any secrets like API keys you have set as environment variables using <code>{VARIABLE_NAME}</code>, for example:</p> <pre><code>---\n- url: \"https://example.com/myfancyfile.json?key={YOUR_SECRET}\"\n  localname: myfancyfile.json\n</code></pre> <p>Note: <code>YOUR_SECRET</code> MUST as an environment variable, and be sure to include the {curly braces} in the url string.</p>"},{"location":"#usage","title":"Usage","text":"<p>Downloader can be used directly in Python or via command line</p>"},{"location":"#in-python","title":"In Python","text":"<pre><code>from kghub_downloader.download_utils import download_from_yaml\n\ndownload_from_yaml(yaml_file=\"download.yaml\", output_dir=\"data\")\n</code></pre>"},{"location":"#command-line","title":"Command Line","text":"<p>To download files listed in a download.yaml file:</p> <pre><code>$ downloader [OPTIONS] ARGS\n</code></pre> OPTIONS yaml_file Path to the download.yaml file, to be parsed for things to download.Defaults to <code>./download.yaml</code> ignore_cache Ignore cache and download files even if they exist (Default <code>False</code>) snippet_only Downloads only the first 5 kB of each uncompressed source, for testing and file checks tags Limit to only downloads with this tag mirror Remote storage URL to upload downloaded files to.Supported buckets: Google Cloud Storage ARGUMENTS output_dir Where to save downloaded files. <p>Examples:</p> <pre><code>$ downloader --output_dir example_output --tags zfin_gene_to_phenotype example.yaml\n$ downloader --output_dir example_output --mirror gs://your-bucket/desired/directory\n\n# Note that if your YAML file is named `download.yaml`,\n# the argument can be omitted from the CLI call.\n$ downloader --output_dir example_output\n</code></pre>"},{"location":"#development","title":"Development","text":""},{"location":"#install","title":"Install","text":"<pre><code>git clone https://github.com/monarch-initiative/kghub-downloader.git\ncd kghub-downloader\npoetry install\n</code></pre>"},{"location":"#run-tests","title":"Run tests","text":"<pre><code>poetry run pytest\n</code></pre> <p>NOTE: The tests require gcloud credentials to be set up as described above, using the Monarch github actions service account.</p>"}]}